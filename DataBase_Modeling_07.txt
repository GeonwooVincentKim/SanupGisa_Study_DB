1. Relationship Read
- 1. 먼저 한 방향 (좌 -> 우) 읽고
- 2. 다른 방향 (우 <- 좌) 을 읽기

2. 관계 형태
- 1. MANY to ONE (M : 1) 관계 -> `>___`
  = 1. 한쪽 방향은 하나 이상 (One or More)
  = 2. 다른 방향은 단 하나씩 (One and Only one)
  = 3. 가장 일반적인 형태
  = 4. Must be (실선) 와 May be (점선) 로 지정되지만, 드물게는 양방향 Must be (실선) 로도 지정

- 2. MANY to MANY (M : M) 관계 -> `>--<`
  = 1. 양쪽 방향 모두 하나 이상 (One or More)
  = 2. 자주 발생되는 형태
  = 3. 상세 개념 모델 (Advanced Conceptual Data Modeling) 단계에서 분할
  = 4. 더 자세한 설명
     -> 1. M : M 관계는 점선으로만 그려놔도 됨 -> 아직 덜 풀려졌고, 다음에 다른 곳 (Entity) 에서도 특정시킬 수 있기 때문
     -> 2. M : M 관계에서는 양쪽 모두 데이터가 한 개도 없을 수 있으므로, 점선으로 표현
  
  = 5. 주의 사항
     -> 1. 관계 명을 쓰지 않은 것은 마치 Entity 명이 없는 Entity 와 같다.
     -> 2. Entity 를 그려놓고, Entity 명 쓰지 않는 경우는 Relation 이 있다고 할 수 없음 (빈 깡통 취급)
     -> 3. `하위 가지` 가 필요없다면 그 `하위 가지` 를 포함하고 있는 `상위 가지` 또한 없어도 된다

- 3. ONE to ONE (1 : 1) 관계 -> `____`
  = 1. 양쪽 방향 모두 단 하나 씩 (One and Only One)
  = 2. 드물게 발생되는 형태
  = 3. 양방향 모두 반드시 (Must be) 가 되는 경우는 아주 드묾
  = 4. 1 : 1 관계는 실제로는 동일한 ENTITY 일 경우 많음
  = 5. 1 : 1 관계까 많이 나타난다면 Entity 가 명확하게 정의되지 않았음
  = 6. 특이사항
     -> `직선 and 점선 관계` 또는 `양쪽 점선 관계` 는 OK
     -> `양쪽 직선 관계` 는 NO => 절대로 자르면 안되는 ENTITY (동일 ENTITY)

3. 다량의 관계 파악을 위한 접근 방법
- 1. 골조 자재 (Key Entity & Main Entity) -> 그래도 많으면 분할 정복
- 2. Matrix 활용
  = 1. 엔터티 30개 -> CELL 900개 -> 1/2 로 줄이기
  = 2. 30개 내외 (많으면 분할 정복)
  = 3. 대각선은 순환 관계

- 3. Matrix 구조
  = 1. 필요한 것은 `체크` 표시 또는 `단어`로 작성
  = 2. 필요하지 않은 것은 `-` 기호로 표시

- 4. Matrix 구도 잡는 법
  = 1. 주요한 Main Entity 를 끄집어 낸 다음, 주요한 지형지물의 구도 잡듯이 잡아나간다.
  = 2. 관계명이 많이 지정된 Entity 가 업무의 중심
  = 3. 그림에서 구도를 잡는 것처럼 주요 Entity 배치

- 5. Matrix 를 이용하여 ERD 작성
  = 1. 부모가 되는 Key Entity 를 적절한 위치에 두고 연결
  = 2. 활동이 많은 Entity 를 업무의 흐름에 맞추어 적절히 배치 (주요 MAIN Entity)
  = 3. Relation 을 연결하면서 `1자 입장` 에서 관계를 검증하여 확실하게 정의

4. Relationship Matrix
- 1. 정의
  = 각 Entity 간 초기 단계 관계 정의하기 위한 보조자료로 활용

- 2. 구성
  = 1. Key Entity 와 Main Entity 를 가로, 세로로 배열
  = 2. 제 3자 입장에서 관계 유무만 판단하여 표시 (체크 표시)
  = 3. 120 ~ 130 % 를 표시한다는 생각
  = 4. 1차 표시 (체크) 된 것들에 대해 구체적인 관계명칭 찾으면서 관계 유무 최종 판단
  = 5. 상관 관계 없으면 DASH ( ____ ) 표시
  = 6. 세로에 있는 ENTITY 가 주어
  = 7. 순환 (Recursive) 관계는 대각선 BOX 에 기술
  = 8. RELATIONSHIP MATRIX 의 내용을 이용해 E-R 을 그림
  = 9. Example
                고객         부품       주문           창고
     고객      _____        _____     요청자로서     ____
     부품      _____        _____     구입받아     저장되어
     주문    요청되어    발주되어    _____          ____
     창고      _____      저장소로서  _____          ____

- 3. POST-IT 활용법
  = 1. 전지 (종이) 를 크게 만든 후, 붙임쪽지 (POST-IT) 을 한 장씩 이어서 연결
  = 2. 위치 변경이 용이하므로, 언제라도 옮길 수 있음

- 4. WHITE BOARD 활용법
  = 1. 서로 Communication 용이
  = 2. 여러 (4 ~ 5) 장을 가지고 있음
  = 3. 색깔 넣기 가능
  = 4. Copy 용이 (Version 관리 용이)

5. 분할 정복 (Divide & Conquer)
- 1. Group 별로 분류 (Key Entity, Main Entity)
- 2. 가능한 한 그룹이 20 ~ 30개 이상이 되지 않도록 할 것
- 3. 통상 SubSystem 단위로 분류
- 4. 매우 큰 시스템에서는 주유 업무별로 분류
- 5. 분류된 Group 별로 타 Group 과 연관 있는 Entity 를 보충

