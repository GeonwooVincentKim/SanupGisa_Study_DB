1. Entity 수집
- 1. Entity 가 될 가능성이 있는 모든 대상을 수집
- 2. Enity 자격 유무 판단
- 3. 비슷한 동의어가 있더라도 함부로 버리지 말 것
- 4. Process 에 과한 집중 금지
- 5. Exception Case 집착 금지
- 6. 단어 하나하나에 집중하여 판단
- 7. Entity 대상으로 선정하였을 때, 핵심적인 특징을 파악해보기
- 8. 사용자의 설명 의존 자제 & 자신이 이해될 때까지 파 내어야 (수사) 함
- 9. 수사는 자신이 하는 것
- 10. 업의 본질 항상 기억

2. 수집 된 Entity 분류
- 1. Key Entity (시조) 
  = 1. 태초부터 창조 된 실체 (주변에 정보가 필요 없음)
  = 2. 잘 변하지 않는 것
  = 3. 데이터 발생시키는 주체
  = 4. 자신의 부모 X
  = 5. Example
     -> 1. 사원
     -> 2. 부모
     -> 3. 거래처
     -> 4. 자재 

- 2. Main Entity (원조)
  = 1. 부모로부터 태어난 실체, 업무의 중심이 되는 실체
  = 2. 많은 자손을 가짐
  = 3. 데이터를 발생시키는 주체
  = 4. 자신의 부모 = Key Entity (시조)
  = 5. Example
     -> 1. 카드
     -> 2. 공사
     -> 3. 계약
     -> 4. 단가

- 3. Action Entity (자손)
  = 1. 실제 발생하는 업무
  = 2. 자주 변경 & 지속적인 증가
  = 3. 반드시 부모 가짐
  = 4. 많은 부모를 가짐
  = 5. Example
     -> 1. 카드 이용
     -> 2. 공사 내역
     -> 3. 계약 변경

-4. Relation Entity
  = 1. 행위 + 개체 (Active + Entity = Relation Entity)
  = 2. Relation 이지만 M:N 이면 Entity => Relation Entity

3. Entity 의 선정
- 1. 매우 일반적인 용어로 정의하더라도 오류 발생 가능성 있음
- 2. 반드시 어떤 요소들이 포함되었는지 명확하게 정의
- 3. Entity 가 명확하지 않으면 추후 많은 혼란 발생
  = 1. 관계 맺고 있는 다른 Entity 와 Relation 형태 혼란
  = 2. 배타적 논리합 관계 다수 발생
     -> 1. OR 관계
     -> 2. SQL 작성 시, OR 사용하면 큰 문제 발생
     -> 3. IF 와 OR 작성하지 않도록 주의 (부모 잃은 사생아와 같은 상황 발생)

  = 3. 부모를 가지지 않는 Data 발생
  = 4. Entity 간 부정확한 관계, 매우 복잡한 관계 생성
  = 5. 추후 Application 에서 복잡한 IF 처리를 해야 함

- 4. Entity 정의가 명확해졌으면, 가장 내용에 부합되는 명칭을 부여
- 5. Entity 명칭은 `그 집합을 정확히 정의`하는 가장 중요한 역할을 담당함
