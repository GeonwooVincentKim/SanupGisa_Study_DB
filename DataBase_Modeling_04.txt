1. Entity
- 1. 관리하고자 하는 Entity
- 2. Entity 가 되기 위해선 반드시 집합(면적)이 필요
  = 1. 집합(면적) = 가로 * 세로
  = 2. 가로와 세로
     -> 1. 가로 -> 우리가 관리하고자 하는 속성
     -> 2. 세로 -> 그러한 개체 덩어리, 건수 몇 건
     -> 3. 확신을 갖는 자료 요청

- 3. 독립성을 가진 집합
  = 독자적인 집합
     -> 1. 데이터가 Including 되어 있거나 Overlap 되어 있으면 안됨
     -> 2. 별도로 떨어진 독자적인 집합

- 4. 동질성이 있는 집합
  = 1. Example
     -> 1. 정규직 직원의 범위와 모든 직원의 범위
     -> 2. 정규직 직원 => 정규직 직원의 집합에 한해서만 데이터의 동질성을 가짐
     -> 3. 모든 직원 => 정규직 뿐만 아니라 비정규직 직원도 함께 포함해서 데이터의 동질성이 포함됨
  
  = 2. 집합의 정의의 테두리를 어떻게 정하는가에 따라 데이터의 동질성이 달라짐

- 5. 본질적인 집합
  = 1. 개체 집합
  = 2. 행위 집합
  = 3. Example
     -> 1. 납부자
         => 1. 납부 = 행위 집합
         => 2. 자 = 개체 집합

     -> 2. 구매자
         => 1. 구매 = 행위 집합
         => 2. 자 = 개체 집합
    
     -> 3. 판매자
         => 1. 판매 = 행위 집합
         => 2. 자 = 개체 집합

     -> 4. `자` 가 들어가 있다고 모두 Entity 가 아니고, Relation 인지 확인해야 함

2. Entity 의 자격 검증
- 1. `우리가 관리하고자 하는` 가로 (속성, 관리 항목) 가 있는지에 대한 여부
  = 관리하고자 하는 가로가 2개 이상 있는지에 대한 여부

- 2. `우리가 관리하고자 하는` 세로 (개체, Instance) 가 있는지에 대한 여부
  = 관리하고자 하는 세로의 개체가 2개 이상 있는지에 대한 여부

- 3. `우리가 관리하는` 의 정의
  = 1. 가로 축
     -> 1. 현재 관리되고 있는 항목
     -> 2. 앞으로 관리 지속
     -> 3. 구축할 시스템의 목표를 위해선 어떤 관리항목이 필요

  = 2. 세로 축
     -> 1. 의미상의 주어 찾기
     -> 2. 개체 구분 명확하게
         => 1. 어떤 경우마다 새로운 단위 개체가 생기는가
         => 2. 절대 종속 or 상대 종속 여부 확인
         => 3. 유형별 개체 형태를 도식해 두기
         => 4. 향후에 발생할 개체 형태 생각하기