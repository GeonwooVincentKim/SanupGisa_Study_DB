1. Entity
- 1. 관리하고자 하는 Entity
- 2. Entity 가 되기 위해선 반드시 집합(면적)이 필요
  = 1. 집합(면적) = 가로 * 세로
  = 2. 가로와 세로
     -> 1. 가로 -> 우리가 관리하고자 하는 속성
     -> 2. 세로 -> 그러한 개체 덩어리, 건수 몇 건
     -> 3. 확신을 갖는 자료 요청

- 3. 독립성을 가진 집합
  = 독자적인 집합
     -> 1. 데이터가 Including 되어 있거나 Overlap 되어 있으면 안됨
     -> 2. 별도로 떨어진 독자적인 집합

- 4. 동질성이 있는 집합
  = 1. Example
     -> 1. 정규직 직원의 범위와 모든 직원의 범위
     -> 2. 정규직 직원 => 정규직 직원의 집합에 한해서만 데이터의 동질성을 가짐
     -> 3. 모든 직원 => 정규직 뿐만 아니라 비정규직 직원도 함께 포함해서 데이터의 동질성이 포함됨
  
  = 2. 집합의 정의의 테두리를 어떻게 정하는가에 따라 데이터의 동질성이 달라짐

- 5. 본질적인 집합
  = 1. 개체 집합
  = 2. 행위 집합
  = 3. Example
     -> 1. 납부자, 구매자, 판매자
         => 1. 납부, 판매, 구매 = 행위 집합
         => 2. 자 = 개체 집합

     -> 2. `자` 가 들어가 있다고 모두 Entity 가 아니고, Relation 인지 확인해야 함

2. Entity 의 자격 검증 - 정의
- 1. `우리가 관리하고자 하는` 가로 (속성, 관리 항목) 가 있는지에 대한 여부
  = 관리하고자 하는 가로가 2개 이상 있는지에 대한 여부

- 2. `우리가 관리하고자 하는` 세로 (개체, Instance) 가 있는지에 대한 여부
  = 1. 관리하고자 하는 세로의 개체가 2개 이상 있는지에 대한 여부
  = 2. Example
     -> 1. 가로 축
         => ID  이름 전화번호 (총 3개)
     
     -> 2. 세로 축
         => 홍길동, 김길동, 박길동 (총 3명)

- 3. `우리가 관리하는` 의 정의
  = 1. 가로 축
     -> 1. 현재 관리되고 있는 항목
     -> 2. 앞으로 관리 지속
     -> 3. 구축할 시스템의 목표를 위해선 어떤 관리항목이 필요

  = 2. 세로 축
     -> 1. 의미상의 주어 찾기
     -> 2. 개체 구분 명확하게
         => 1. 어떤 경우마다 새로운 단위 개체가 생기는가
         => 2. 절대 종속 or 상대 종속 여부 확인
         => 3. 유형별 개체 형태를 도식해 두기
         => 4. 향후에 발생할 개체 형태 생각하기 (Constraint Key 도 생각해볼 수 있음)

- 4. 개체 집합
  = 1. (개체 + 행위) 집합 * 2개 = Relation 관계
  = 2. 2개의 개체 (UNION 된 집합)를 합해서 Distinct 한 개체
  = 3. 행위가 달라지는 것이지, 개체가 달라지지 않음 => Entity 의 관계만 변함

3. Entity 의 자격 검증 - 통합
- 1. 동질성 확보의 원칙
  = 1. 가능한 공통성 보장 -> 통합
     -> 가능하면 묶을 수록 통합성이나 융통성이 더 좋아지게 됨

  = 2. 의미 희석
     -> 1. 너무 많이 묶을 수록 의미가 희석이 될 가능성 증가
     -> 2. 융통성은 좋아지지만, 의미가 나빠지는 현상 발생 
         => 분수의 분모의 숫자가 계속 늘어나는 현상과 비슷

- 2. 통합의 장단점 (집합의 증가)
  = 1. 장점
     -> 1. 통합하지 않으면 의미는 분명해짐 (확장성)
     -> 2. 통합할수록 융통성은 증가 (융통성)

  = 2. 단점
     -> 1. 새로운 유사 집합 추가 시, 배타적 관계 증가 & 복잡해 짐 (명확성)
     -> 2. 의미의 희석 발생 가능성 증가 (단순성)
  
  = 3. 희석 방지 방법 => 통(subtype) 에 담아 넣기 (최적의 조화 찾기 -> 전략 & 모델러의 능력)

- 4. 집합은 모두 엔터티인가
  = 1. 집합
     -> 1. 판단의 기준
     -> 2. 장단점
  
  = 2. 외부 집합
     -> 별도의 엔터티
     -> 분리 시, 어떤 관계가 형성되어야 하는지에 대한 여부

4. KEY ENTITY 의 단순화
  - 1. 부모 분산 -> 자손들 복잡
  - 2. 상위 Entity 는 하위 Entity 에 지대한 영향
  - 3. 상위로 갈수록 하위에 영향
  - 4. 인수 분해 & 통분 (공통인수로 인수 분해, 통분)
  - 5. 결정의 키 포인트

5. 하위 Entity 에서 Key Entity 도출
  - 1. 하위 Entity 에서 Key Entity 도출
    = 1. 부모 없이 태어난 자손 X
    = 2. 의미 상의 주어 -> Entity 탄생에 직접적인 역할을 한 속성들
    = 3. 종속 종류
       => 1. 절대 종속 => 나를 태어나게 하기 위해서 반드시 필요한 부모인지 여부 확인
       => 2. 직접 종속 => 1촌 여부 확인
  
    = 4. 놓쳐 버린 Entity 가 있더라도 각 단계에 충실하면 결국엔 다시 나타남
    = 5. Key Entity 를 놓치면 시행착오 발생
  
  - 2. 의미 상의 주어
    = 누가, 무엇을, 언제, 어디서
  
  - 3. 관리할 속성
    = 어떻게, 왜
  
  - 4. TOP-DOWN 방식
    = Key Entity -> 하위 Entity
  
  - 5. BOTTOM-UP 방식
    = 하위 Entity -> Key Entity