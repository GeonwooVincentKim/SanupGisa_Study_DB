1. M : 1 순환 관계
- 1. 해당 Table 내에 FK Column 추가
- 2. 이 FK 는 같은 Table 내의 다른 Row 의 PK Column 을 참조하게 됨
- 3. FK Column 명칭은 가능한 관계명칭을 반영
- 4. 이 FK 는 결코 NN (Not Null) 이 될 수 없음
  = 자기 Entity 에서 떨어져 나왔지만, 선분에 의해서 만들어졌으므로, NN 이 될 수 없음

2. 1 : 1 순환 관계
- 1. 해당 Table 내에 UNIQUE 한 FK Column 추가
- 2. 이 FK 는 같은 Table 내의 다른 Row 의 PK Column 을 참조하게 됨
- 3. FK Column 명칭은 가능한 관계명칭을 반영
- 4. 이 FK 는 결코 NN (Not Null) 이 될 수 없음
  = 1. 1 : 1 의 특성상 U2 가 지정 됨
  = 2. 1 : 1 순환관계의 Table 에는 Null 상태의 Data 가 존재할 수도 있음

3. 복잡한 E-R Model 을 Table 로
- 1. Arc 형태
  = 배타적 관계에 있는 모델을 설계하는 법
     -> 1. 각각의 FK (Foreign Key) 를 전부 다 분리하기 
         => 1. 분리를 하는 순간, NN (Not Null) 성질이 깨짐
         => 2. 어떤 FK A 에는 Data 가 들어가고, 또 어떤 FK B 에는 Data 가 안들어가는 상황 발생 가능
 
     -> 2. 각각의 FK (Foreign Key) 전체를 전부 다 묶어서 하나의 값으로 가져오기
         => 1. 모든 FK 를 묶어서 하나의 값으로 가져왔으므로, 통합 FK 가 만들어짐 (FK 1개)
         => 2. FK 에 들어가는 모든 경우의 Data 가 다 들어옴
         => 3. 전체를 전부 다 묶어서 하나의 값으로 가져온 선분이 하나의 Attribute 가 되어 Type Field 가 됨 (구분 코드)
              * 구분 코드를 넣어서 이 Data 가 FK A 출신인지, FK B 출신인지 확인
