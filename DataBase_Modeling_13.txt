1. 상세 개념데이터 모델링
- 1. 데이터 모델의 상세화
  = 1. 정규화 (Normalization) 작업
  = 2. M : M Relationship 의 해소

- 2. 데이터 모델의 통합화
  = 1. 순환 관계 (Recursive Relationship) 로 통합
  = 2. 역할의 통합
  = 3. SUBTYPE 을 이용한 통합
  = 4. 배타적 관계 (Exclusive Relationship) 로 통합
  = 5. 복잡한 관계 (Complex Relationship) 의 통합

- 3. 이력 (Historical) 관리의 반영

2. DATA MODEL 의 정규화
- 1. 정규화 작업은 관계형 데이터베이스의 개념이지만 그 원칙은 개념 데이터 모델링에 적용됨
- 2. 정규화 단계별 규칙을 사용하여 ATTRIBUTE 의 위치를 적절히 하는 것
- 3. 정규화 작업이 완료된 E-R Model 은 바로 정규화된 관계형 DB 설계로 옮겨짐
- 4. 제3정규형은 데이터 중복을 제거하기 위한 DB 설계의 일반적인 목표
- 5. 그 이상의 정규형은 별로 폭 넓게 사용되지 않음

- 6. 순서
  = 1. First Normal (제 1 정규형
  = 2. Second Normal (제 2 정규형
  = 3. Third Normal (제 3 정규형
  = 4. Fourth Normal (제 4 정규형
  = 5. Voice Code 정비화
  = 6. Fifth Normal (제 5 정규형

- 7. 제 1 정규형
  = 1. 모든 Attribute 는 반드시 하나의 값을 가져야만 함
     -> 어떤 값이 1개가 아닌 N개일 경우, 하위 정규형 단계로 떨어진다 (1단계 -> 2단계)

  = 2. 반복 형태가 있어서는 안됨
  
- 8. 제 2 정규형
  = 1. 모든 Attribute 는 반드시 UID 전부에 종속되어야 함
     -> 1. 재혼하기 전 이미 있는 자식을 데리고 온 어머니 A
     -> 2. 재혼하기 전 싱글이었던 새아버지 C
     -> 3. 부부간 새로 자식이 태어남
         => 1. 이미 다른 아버지로부터 태어난 자식들은 새아버지로부터 태어나지 않았으므로, 제 2 정규형 위배
         => 2. 하위 정규형으로 떨어짐 (2단계 -> 3단계)

  = 2. UID 일부에만 종속되어서는 안됨
     -> 전체가 종속되어야 함

- 9. 제 3 정규형
  = 1. UID 가 모든 Attribute 간에는 서로 종속될 수 없음
     -> 1. 형제끼리의 종속성을 따짐
     -> 2. 제 2 정규형을 통과했다면 그 아버지와 그 아머니가 만든 작품들만 남게 될 것 (형제들)
     -> 3. 남은 Attribute 들은 전부 형제가 되어야 함
     -> 4. 독립적인 어미를 가지고 있는 Attribute
     -> 5. 형제들 간의 사이는 종속성이 없음

  = 2. Attribute 간 종속성 배치

3. 제 1 정규형
- 1. 모든 Attribute 는 반드시 하나의 값을 가져야만 함
  = 1. 어떤 값이 1개가 아닌 N개일 경우, 하위 정규형 단계로 떨어진다 (1단계 -> 2단계)
  = 2. Example
     -> 고객 (고객번호, 고객명, 계약일)
         => 1. 고객이 여러 번의 계약을 하게 된다면? 
         => 2. 제 1 정규화 통과 -> 제 2 정규화행으로..

- 2. 어떤 ATTRIBUTE 가 다수의 값을 가지고 있다면, M : 1 관계의 새로운 ENTITY 를 추가

