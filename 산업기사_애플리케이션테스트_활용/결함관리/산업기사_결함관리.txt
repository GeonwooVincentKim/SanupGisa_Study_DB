결함

- S/W 가 개발자가 설계한 것과 다르게 동작하거나 다른 결과가 발생되는 것


결함 관리 프로세스

- 1. 결함 관리 계획 = 전체 프로세스 결함 관리 일정, 인력, 업무 프로세스 계획
- 2. 결함 기록 = 테스터는 발견된 결함을 결함 관리 DB 에 등록
- 3. 결함 검토 = 등록된 결함 검토, 결함을 수정할 개발자에게 전달
- 4. 결함 수정 = 개발자는 전달받은 결함 수정
- 5. 결함 재확인 = 테스터 개발자의 수정 내용 확인 후 다시 테스트 수행
- 6. 결함 상태 추적 및 모니터링 활동 = 결함관리 DB, 대시보드
- 7. 최종 결함 분석 및 보고서 작성 = 반영된 보고서 작성, 결함 관리 종료


결함 상태 추적

- 1. 지속적인 상태 변화 추적 및 관리
- 2. 결함 관리 측정 지표
  = 1. 결함 분포 -> 모듈, 컴포넌트 특정 속성, 결함 수 측정
  = 2. 결함 추세 -> 테스트 진행 시간, 결함 수 추이 분석
  = 3. 결함 에이징 -> 특정 결함 상태로 지속되는 시간 측정


결함 추적 순서

- 1. 결함 등록 = QA 담당자에 의해 발견된 결함 등록된 상태
- 2. 결함 검토 = 모듈 개발자에 의해 검토된 상태
- 3. 결함 할당 = 결함 수정, 개발자와 문제 해결 담당자에게 결함이 할당된 상태
- 4. 결함 수정 = 개발자가 결함 수정을 완료한 상태
- 5. 결함 조치 보류 = 결함 수정 불가능해 연기, 우선순위, 일정에 따라 재오픈 준비
- 6. 결함 종료 = 결함 해결, QA 담당자가 종료를 승인한 상태
- 7. 결함 해제 = 결함 검토, 결함이 아니라고 판명한 상태


결함 분류

- 1. 시스템 결함 = App 환경, DB 처리에서 발생된 결함
- 2. 기능 결함 = App 의 기획, 설계, 업무 시나리오 등의 단계에서 유입된 결함
- 3. GUI 결함 = 사용자 화면 설계에서 발생된 결함
- 4. 문서 결함 = 기획자, 사용자, 개발자 간 의사소통 및 기록 원할 X, 발생된 결함


결함 심각도

- 1. 애플리케이션에 발생한 결함이 전체 시스템에 미치는 치명도를 나타내는 척도
- 2. High, Medium, Low 또는 Critical, Major, Normal, Minor, Simple


결함 우선순위

- 발견된 결함 처리 신속성을 나타내는 척도


결함 관리도구

- 1. Mantis = 결함 및 이슈 관리 도구, S/W 설계시 단위별 작업 내용 기록, 결함 추적 O
- 2. Trac = 결함 추적 + 결함 통합하여 관리 가능 도구
- 3. Redmine = 프로젝트 관리 및 결함 추적 가능한 도구
- 4. Bugzilla
  = 1. 결함 신고, 확인, 처리 등 결함의 지속적 관리 가능
  = 2. 결함 심각도 및 우선순위 지정 가능

