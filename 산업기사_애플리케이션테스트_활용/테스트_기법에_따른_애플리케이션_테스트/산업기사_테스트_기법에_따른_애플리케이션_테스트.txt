화이트 박스 테스트
- 1. 원시 코드의 논리적인 모든 경로를 테스트하여 TC 를 설계하는 방법
- 2. 모듈 안의 작동을 직접 관찰, 모든 문장을 한 번 이상 실행


화이트 박스 테스트의 종류
- 1. 기초 경로 검사
  = 논리적 복잡성 측정할 수 있게 해주는 테스트 기법

- 2. 제어 구조 검사
  = 1. 조건 검사 -> 프로그램 모듈 내, 논리적 조건 테스트, TC 설계 기법
  = 2. 루프 검사 -> 프로그램 반복 구조 내, 초첨을 맞춰 실시, TC 설계 기법
  = 3. 데이터 흐름 검사 -> 프로그램 변수 정의, 변수 사용 위치 초첨, TC 설계 기법


화이트 박스 테스트의 검증 기준


- 1. 문장 검증 기준 -> 모든 구문 한 번 이상 수행되도록 TC 설계
- 2. 분기 검증 기준 
  -> 1. 모든 조건문 조건식 결과가 True or False, 한 번 이상 수행, TC 설계
  -> 2. 결정 검증 기준

- 3. 조건 검증 기준 -> 개별 조건식 결과가 True or False, 한 번 이상 수행, TC 설계
- 4. 분기/조건 기준 
  -> 1. 분기 검증 기준 + 조건 검증 기준 모두 만족
  -> 2. 조건문 True or False, 조건 검증 기준의 입력 데이터 구분하는 TC 설계


블랙박스 테스트
- 1. 각 기능이 완전히 작동되는 것을 입증하는 테스트, 기능 테스트
- 2. 사용자의 요구사항 명세를 보며 테스트
- 3. 구현된 기능 및 S/W 인터페이스를 통해 실시


블랙박스 테스트의 종류
- 1. 동치 분할 검사 = 타당한 입력 자료 및 타당 X 입력 자료 개수 균등, 동등 분할 기법
- 2. 경계값 분석 = 입력 조건의 경계값을 TC 로 선정하여 검사
- 3. 원인-효과 그래프 검사 
  = 1. 입력 데이터 관계, 출력 영향 미치는 상황 체계적으로 분석
  = 2. 효용성이 높은 TC 검사

- 4. 오류 예측 검사 = 과거 경험, 확인자의 감각으로 테스트
- 5. 비교 검사 
  = 여러 버전의 프로그램에서 동일한 테스트 자료 제공, 동일한 결과 출력 여부 확인

- 6. Example
  = 1. 평가 점수
    90 ~ 100   A
    80 ~ 89    B
    70 ~ 79    C
    0 ~ 69     D

  = 2. 동치 분할 검사 (타당한 입력 자료와 타당 X 입력 자료 개수 동일)
    입력값   60  75  82  96
  예상결과값 D   C   B   A
  실제결과값 D   C   B   A

  = 3. 경계값 분석
    입력 값  -1   0  69  70  79  80  89  90  100  101
  예상결과값 오류 D  D   C   C   B   B   A   A    오류
  실제결과값 오류 D  D   C   C   B   B   A   A    오류

