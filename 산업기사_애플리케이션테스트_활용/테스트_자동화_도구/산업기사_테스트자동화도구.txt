테스트 자동화

- 1. 사람의 반복적 수행 테스트 절차, 스크립트 형태로 구현하는 자동화 도구 적용
- 2. 테스트 자동화 도구의 종류
  = 1. 정적 분석 도구
  = 2. 테스트 실행 도구
  = 3. 성능 테스트 도구
  = 4. 테스트 통제 도구


정적 분석 도구

- 1. 프로그램을 실행하지 않고 분석하는 도구
- 2. 코딩 표준, 코딩 스타일, 코드 복잡도 및 남은 결함 발견


테스트 실행 도구

- 1. 스크립트 언어를 사용하여 테스트를 실행하는 도구
- 2. 테이터 주도 접근 방식 = SpreadSheet 에 데이터 저장, 읽어 실행
- 3. 키워드 주도 접근 방식
  = SpreadSheet 에 테스트 수행 동작 키워드 및 테스트 데이터 저장, 실행


성능 테스트 도구

- 가상의 사용자를 만들어 테스트 수행, 성능 목표 달성 여부 확인하는 도구


테스트 통제 도구

- 1. 테스트 계획 및 관리, 테스트 수행, 결함 관리 등을 수행
- 2. 형상 관리 도구, 결함 추척/관리 도구


테스트 하네스 도구

- 1. 테스트가 실행될 환경 시뮬레이션, 컴포넌트 & 모듈 정상적으로 Test 되도록하는 도구
- 2. 테스트 하네스
  = 1. 애플리케이션의 컴포넌트 및 모듈 테스트, 환경 일부분
  = 2. 테스트 지원하기 위해 생성된 코드와 데이터


테스트 하네스의 구성 요소

- 1. 테스트 드리이버 = 하위모듈 호출, 파라미터 전달, 모듈 테스트 수행 후 결과 도출
- 2. 테스트 스텁 = 타 모듈 기능 단순히 수행하는 도구
- 3. 테스트 슈트 = 컴포넌트, 모듈, 시스템에 사용되는 TC 의 집합
- 4. TC = 사용자 요구사항 준수 여부, 입력값, 실행 조건, 기대 결과, 테스트 항목 명세서
- 5. 테스트 스크립트 = 자동화된 테스트 실행 절차에 대한 명세서
- 6. 목 오브젝트 = 사전에 사용자 행위 조건부 입력, 예정된 행위 수행하는 객체


테스트 수행 단계별 테스트 자동화 도구

    <테스트 단계>  <자동화 도구>
- 1. 테스트 계획 - 요구사항 관리 - 사용자 요구사항 정의, 변경, 변경사항 관리
- 2. 테스트 분석/설계 - TC 생성 - 테스트 데이터, TC 작성 지원하는 도구
- 3. 테스트 수행 - 테스트 자동화 - 테스트 자동화 도와주는 도구, 테스트 효율성 증대
- 4. 테스트 수행 - 정적 분석 - 코딩 표준, 런타임 오류 검증하는 도구
- 5. 테스트 수행 - 동적 분석 - 대상 시스템 시뮬레이션, 오류 검출
- 6. 테스트 수행 - 성능 테스트 - 가상 사용자 생성, 시스템 처리 능력 측정
- 7. 테스트 수행 - 모니터링 - CPU, Memory 시스템 자원 상태 확인 및 분석 지원
- 8. 테스트 관리 - 커버리지 분석 - 테스트 완료 후, 테스트 충분성 여부 검증 지원
- 10. 테스트 관리 - 형상 관리 - 테스트 수행 필요한 다양한 도구, 데이터 관리
- 11. 테스트 관리 - 결함 추적/관리 - 테스트 시 발생한 결함 추적, 관리 활동 지원
