CREATE SCHEMA
-> 1. 기본 구조
    => CREATE SCHEMA 스키마명 AUTHORIZATION 사용자_ID

-> 2. Example
    => 1. 소유권자의 사용자 ID 가 '홍길동' 인 스키마 '대학교' 를 정의하는 SQL 문
    => 2. CREATE SCHEMA 대학교 AUTHORIZATION 홍길동;


CREATE DOMAIN
-> 1. 기본 구조
    => CREATE DOMAIN 도메인명 [AS] * 데이터_타입
         [DEFAULT 기본 값]
         [CONSTRAINT] 제약조건명 CHECK (범위값)

-> 2. Example
    => 1. '성별' 을 '남' 또는 '여' 와 같이 정해진 1개의 문자로 표현되는 도메인 SEX 를 정의하는 SQL 문
    => 2. CREATE DOMAIN SEX DFAULT '남' CONTRACT VALID-SEX CHECK('남', '여')


CREATE TABLE
-> 1. 기본 구조
    => CREATE TABLE 테이블명
         (속성명 데이터_타입 [DEFAULT_기본값] [NOT NULL], ...
         [, PRIMARY KEY(기본키_속성명, ...)]
         [, UNIQUE(대체키_속성명, ...)]
         [, FOREIGN KEY(외래키_속성명, ...)]
                    REFERENCES 참조테이블(기본키_속성명, ...)]
	        [ON DELETE 옵션]
	        [ON UPDATE 옵션]
         [, CONSTRAINT 제약조건명] [CHECK (조건식)]

-> 2. Example
    => 1. '이름', '학번', '전공', '성별', '생년월일' 로 구성된 (학생) 테이블을 정의하는 SQL문
    => 2. '이름'은 NULL X, '학번' 기본키
    => 3. '전공' 은 <학과> 테이블의 '학과코드' 를 참조하는 외래키로 사용
    => 4. <학과> 테이블에서 삭제가 일어나면 관련된 Tuple 들의 전공 값을 NULL 로 만듬
    => 5. <학과> 테이블에서 '학과코드' 가 변경되면 전공 값도 같은 값으로 변경 됨
    => 6. '생년월일' 은 1980-01-01 이후의 데이터만 저장 가능
    => 7. 제약 조건의 이름은 '생년월일제약'
    => 8. 각 속성의 데이터 타입은 적당하게 지정하며, '성별' 은 도메인 'SEX' 를 사용
    => 9. CREATE TABLE 학생
            이름 NOT NULL,
            학번 CHAR(8),
            전공 CHAR(5),
            성별 SEX,
            생년월일 DATE,
            PRIMARY KEY(학번),
            FOREIGN KEY(전공) REFERENCES 학과(학과코드)
                     ON DELETE SET NULL,
                     ON UPDATE SET CASCADE,
            CONSTARINT 생년월일제약
            CHECK((생년월일) = '1980-01-01')


CREATE VIEW
-> 1. 기본 구조
    => CREATE VIEW 뷰명[(속성명[, 속성명, ...])]
         AS SELECT 문;

-> 2. Example
    => 1. <고객> 테이블에서 '주소' 가 '안산시' 인 고객들의 '성명' 과 '전화번호' 를 '안산고객' 이라는 뷰로 정의
    => 2. CREATE VIEW 안산고객(성명, 전화번호)
	AS SELECT '성명', '전화번호'
	FROM 고객
	WHERE '주소' = '안산시'


CREATE INDEX
-> 1. 기본 구조
